name: Reusable - Push to AWS ECR

on:
  workflow_call:
    inputs:
      func_name:
        required: true
        type: string
    secrets:
      aws_access_key:
        required: true
      aws_secret_key:
        required: true
      aws_repository:
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key }}
          aws-secret-access-key: ${{ secrets.aws_secret_key }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.aws_repository }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./src/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy_lambda:
    needs: build-container
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key }}
          aws-secret-access-key: ${{ secrets.aws_secret_key }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Deploy container lambda
        uses: appleboy/lambda-action@v0.1.9
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.aws_repository }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}
        with:
          aws_access_key_id: ${{ secrets.aws_access_key }}
          aws_secret_access_key: ${{ secrets.aws_secret_key }}
          aws_region: us-east-1
          function_name: ${{ inputs.func_name }}
          image_uri: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}