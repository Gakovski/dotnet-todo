name: Main CI/CD
run-name: Workflow started for ${{ github.actor }}. Run number ${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      deploy_prod:
        description: Deploy Cluster to Production
        required: true
        type: boolean

jobs:
  #scan-code:
  #  name: Scan code with CodeQL
  #  uses: gakovski/dotnet-todo/.github/workflows/scan-code.yaml@main
  #  permissions:
  #    security-events: write
  #    actions: read
  #    contents: read

  #build-docker-local:
  #  name: Build Docker Container
  #  needs: scan-code
  #  uses: gakovski/dotnet-todo/.github/workflows/build.yaml@main
  #  with:
  #    image_name: 'to-do-api'
  #    image_tag: 'latest'
  #  secrets:
  #    dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
  #    dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
  
  build-docker-ecr:
    name: Build and Push to Amazon ECR
    #needs: scan-code
    uses: gakovski/dotnet-todo/.github/workflows/aws-ecr.yaml@main
    with:
      image_name: 'to-do-api-ecr'
      image_tag: 'latest'
    secrets:
      aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws_repository: ${{ secrets.REPO_NAME }}

  test:
    runs-on: ubuntu-latest
    needs: build-docker-ecr
    steps:
      - name: Get URI of the Docker image from previous job
        run: |
          echo "The URI of the Docker image is ${{ needs.build-docker-ecr.outputs.image_uri }}"
          echo "The URI of the Docker image is ${{ needs.build-docker-ecr.outputs.uri}}"
          echo "The URI of the Docker image is ${{ needs.build-docker-ecr.outputs.image_uri_output}}"

  deploy-lambda:
    name: Deploy AWS Lambda
    needs: build-docker-ecr
    uses: gakovski/dotnet-todo/.github/workflows/aws-deploy.yaml@main
    with:
      func_name: 'to-do-api-lambda'
      lambda_uri: ${{ needs.build-docker-ecr.outputs.uri}}
    secrets:
      aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  #deploy-cluster-train:
  #  name: Deploy K8S Cluster - Train
  #  needs: build-docker-local
  #  uses: gakovski/dotnet-todo/.github/workflows/deploy.yaml@main
  #  with:
  #    environment: 'train'
#
  #deploy-cluster-prod:
  #  name: Deploy K8S Cluster - Prod
  #  needs: deploy-cluster-train
  #  if: ${{ inputs.deploy_prod }}
  #  uses: gakovski/dotnet-todo/.github/workflows/deploy.yaml@main
  #  with:
  #    environment: 'prod'
#
  #create-release:
  #  name: Create Release Notes
  #  needs: deploy-cluster-prod
  #  uses: gakovski/dotnet-todo/.github/workflows/release.yaml@main
  #  secrets:
  #    token: ${{ secrets.GITHUB_TOKEN }}
  #  permissions:
  #    contents: write
  #    issues: write
  #    pull-requests: write
