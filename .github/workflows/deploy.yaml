name: Reusable - Deploy Kubernetes Cluster

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v4

    - run: |
       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
       sudo apt-get install apt-transport-https --yes
       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
       sudo apt-get update
       sudo apt-get install helm

    - name: Start Minikube
      id: minikube
      uses: medyagh/setup-minikube@latest

    - name: Create Namespace
      run: kubectl create namespace ${{ inputs.environment }}

    - name: Install Helm Chart
      run: helm install todoapi-${{ inputs.environment }} ./mychart/ --values ./mychart/values.yaml -f ./mychart/values-${{ inputs.environment }}.yaml -n ${{ inputs.environment }}
  
    - name: Get pods
      run: kubectl get pods -A

    - name: Get URL
      run: |
        sleep 21
        echo "urlminikube=$(minikube service todoapi-${{ inputs.environment }} -n ${{ inputs.environment }} --url)" >> $GITHUB_ENV

    - name: POST Request
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ env.urlminikube }}/todoitems
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"id": 1, "name": "${{ inputs.environment }} environment", "isCompleted": false}'

    - name: Test service URLs
      run: |
        sleep 20
        curl ${{ env.urlminikube }}/healthz
        curl ${{ env.urlminikube }}/todoitems

    #FOR LOCAL DEPLOYMENT ON RUNNER ^

    #FOR CLOUD DEPLOYMENT v

    #- name: 'Deploy'
    #  uses: 'deliverybot/helm@v1'
    #  with:
    #    release: 'todoapi-prod'
    #    namespace: 'default'
    #    chart: 'app'
    #    token: '${{ github.token }}'
    #    values: |
    #      name: todoapi123
    #    value-files: >-
    #      [
    #        "values.yaml", 
    #        "values.prod.yaml"
    #      ]
    #  env:
    #    KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'